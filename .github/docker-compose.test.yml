services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
    environment:
      - REDIS_REPLICATION_MODE=master
    volumes:
      - redis_data:/data
    networks:
      - streamll_test

  # RabbitMQ for future sink development
  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: streamll_test
      RABBITMQ_DEFAULT_PASS: streamll_test
      RABBITMQ_DEFAULT_VHOST: streamll
      RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
      RABBITMQ_USE_LONGNAME: "false"
      RABBITMQ_NODENAME: rabbit@rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 60s
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - streamll_test

  # Redpanda for future Kafka-compatible sink development (lighter than Kafka+Zookeeper)
  redpanda:
    image: redpandadata/redpanda:latest
    command:
      - redpanda
      - start
      - --smp
      - "1"
      - --memory
      - "1G"
      - --reserve-memory
      - "0M"
      - --overprovisioned
      - --node-id
      - "0"
      - --kafka-addr
      - "PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092"
      - --advertise-kafka-addr
      - "PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092"
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    networks:
      - streamll_test
    profiles:
      - kafka-testing  # Only start when explicitly requested

volumes:
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  redpanda_data:
    driver: local

networks:
  streamll_test:
    driver: bridge